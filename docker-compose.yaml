---
version: "3.6"

## START BLOCK ##
services:
  base:
    image: lifeci/onbuild:base${CIRCLE_BUILD_NUM}
    entrypoint: bash -c 'uname -a'
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        - DebianV=9.5-slim
        - VirtEnvV=16.0.0
      context: ./base
      dockerfile: Dockerfile
  ## END BLOCK ##

  ## START BLOCK ##
  docker:
    depends_on:
      - base
    image: lifeci/onbuild:docker${CIRCLE_BUILD_NUM}
    entrypoint: docker --version
    build:
      args:
        - BasedOn=base
        - BuildNo=${CIRCLE_BUILD_NUM}
        - DockerV=5:18.09.2~3-0~debian-stretch
        - DockerComposeV=1.23.2 #1.22.0   #https://github.com/docker/compose/releases
      context: ./docker
      dockerfile: Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  ## END BLOCK ##

  ## START BLOCK ##
  aws:
    depends_on:
      - base
    image: lifeci/onbuild:aws${CIRCLE_BUILD_NUM}
    entrypoint: aws --version
    build:
      args:
        - BasedOn=base
        - BuildNo=${CIRCLE_BUILD_NUM}
        - AWScliV=1.16.105 #1.11.156
        - AWSiamV=1.11.5/2018-12-06
      context: ./aws
      dockerfile: Dockerfile
  ## END BLOCK ##

  ## START BLOCK ##
  # ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa-vtx -q -N ""
  ansible_alpine:
    #depends_on:
    #  - base
    image: lifeci/onbuild:ansible_alpine${CIRCLE_BUILD_NUM}
    #entrypoint: ansible --version
    entrypoint: sleep 1d
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        - AnsibleV=2.10.0
      context: ./ansible
      dockerfile: Dockerfile_alpine
    volumes:
      - ${HOME}/.ssh/id_rsa-vtx:/etc/ssh/id_rsa:ro
      - ${HOME}/.ssh/id_rsa-vtx.pub:/etc/ssh/id_rsa.pub:ro
  ## END BLOCK ##

  ## START BLOCK ##
  base_alpine:
    image: lifeci/onbuild:base_alpine${CIRCLE_BUILD_NUM}
    #entrypoint: cat /etc/os-release
    entrypoint: sleep 1d
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        - AlpineV=3.10.2
      context: ./base
      dockerfile: Dockerfile_alpine
  ## END BLOCK ##

  ## START BLOCK ##
  tf_tg:
    image: lifeci/onbuild:tf_tg${CIRCLE_BUILD_NUM}
    #entrypoint: cat /etc/os-release
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        - tf_V=0.11.14
        - tg_V=0.18.7
      context: ./tf_tg
      dockerfile: Dockerfile
  ## END BLOCK ##

  ## START BLOCK ##
  aws_okta:
    image: lifeci/onbuild:tf_tg-aws_okta${CIRCLE_BUILD_NUM}
    #entrypoint: cat /etc/os-release
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        - aws_V=0.11.14
        - okta_V=0.22.1
      context: ./tf_tg/aws_okta
      dockerfile: Dockerfile
  ## END BLOCK ##

  ## START BLOCK ##
  # ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa-vtx -q -N ""
  ansible:
    depends_on:
      - base
    image: lifeci/onbuild:ansible${CIRCLE_BUILD_NUM}
    #entrypoint: ansible --version
    entrypoint: ansible --version
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        - AnsibleV=${ANSIBLE_VERSION}
        #2.2.1.0-2+deb9u1
      context: ./ansible
      dockerfile: Dockerfile
    volumes:
      - ${HOME}/.ssh/id_rsa-vtx:/etc/ssh/id_rsa:ro
      - ${HOME}/.ssh/id_rsa-vtx.pub:/etc/ssh/id_rsa.pub:ro
  ## END BLOCK ##

  ## START BLOCK ##
  azure:
    #depends_on:
    #  - base
    image: lifeci/onbuild:azure${CIRCLE_BUILD_NUM}
    #entrypoint: az --version
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        #- AWScliV=1.11.156
      context: ./azure
      dockerfile: Dockerfile
  ## END BLOCK ##

  ## START BLOCK ##
  azp:
    depends_on:
      - base
    image: lifeci/onbuild:azp${CIRCLE_BUILD_NUM}
    #entrypoint: sleep 9999
    #entrypoint:  cat /azp/start.sh
    # /azp/agent/bin/Agent.Listener --version

    #agent/bin/Agent.Listener --version
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        #- AWScliV=1.11.156
      context: ./azp
      dockerfile: Dockerfile
    environment:
      - AZP_AGENT=${AZP_AGENT}
      - AZP_WORK=${AZP_WORK}
      - AZP_ACCOUNT=${AZP_ACCOUNT}
      - AZP_POOL=${AZP_POOL}
      - AZP_TOKEN=${AZP_TOKEN}
      - AZP_AGENT_VERSION=${AZP_AGENT_VERSION}

      - AZP_DEPLOYMENT_GRP_NAME=${AZP_DEPLOYMENT_GRP_NAME}
      - AZP_DEPLOYMENT_PROJECT=${AZP_DEPLOYMENT_PROJECT}
      - AZP_DEPLOYMENT_TAGS=${AZP_DEPLOYMENT_TAGS}
      - AZP_DEPLOYMENT_POOL=${AZP_DEPLOYMENT_POOL}
      #https://github.com/Microsoft/azure-pipelines-agent/releases
  ## END BLOCK ##

  ## START BLOCK ##
  azpsql:
    depends_on:
      - azp
    image: lifeci/onbuild:azpsql${CIRCLE_BUILD_NUM}
    entrypoint: sqlpackage
    #entrypoint: sqlcmd
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
      context: ./azp/sql
      dockerfile: Dockerfile
  ## END BLOCK ##

  ## START BLOCK ##
  azpansible:
    depends_on:
      - azp
    image: lifeci/onbuild:azpansible${CIRCLE_BUILD_NUM}
    entrypoint: ansible --version
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        - AnsibleV=${ANSIBLE_VERSION}
        #- AWScliV=1.11.156
      context: ./azp/ansible
      dockerfile: Dockerfile
    environment:
      - Key=Val
  ## END BLOCK ##

  ## START BLOCK ##
  azpansibledocker:
    depends_on:
      - azpansible
    image: lifeci/onbuild:azpansibledocker${CIRCLE_BUILD_NUM}
    entrypoint: docker --version
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        - AnsibleV=${ANSIBLE_VERSION}
        - DockerV=5:18.09.2~3-0~debian-stretch
        - DockerComposeV=1.23.2 #1.22.0   #https://github.com/docker/compose/releases
      context: ./ #./azp/ansible/docker
      dockerfile: ./azp/ansible/docker/Dockerfile #Dockerfile
    environment:
      - Key=Val
  ## END BLOCK ##

  ## START BLOCK ##
  azpdocker:
    depends_on:
      - azp
    image: lifeci/onbuild:azpdocker${CIRCLE_BUILD_NUM}
    entrypoint: docker --version
    build:
      args:
        - BasedOn=azp
        - BuildNo=${CIRCLE_BUILD_NUM}
        - DockerV=5:18.09.2~3-0~debian-stretch
        - DockerComposeV=1.23.2 #1.22.0   #https://github.com/docker/compose/releases
      context: ./ #./azp/ansible/docker
      dockerfile: ./azp/docker/Dockerfile #Dockerfile
    environment:
      - Key=Val
  ## END BLOCK ##

  ## START BLOCK ##
  azpaws:
    depends_on:
      - azp
    image: lifeci/onbuild:azpaws${CIRCLE_BUILD_NUM}
    entrypoint: aws --version
    build:
      args:
        - BasedOn=azp
        - BuildNo=${CIRCLE_BUILD_NUM}
        - AWScliV=1.16.105 #1.11.156
        - AWSiamV=1.11.5/2018-12-06
      context: ./ #./azp/ansible/docker
      dockerfile: ./azp/aws/Dockerfile #Dockerfile
    environment:
      - Key=Val
  ## END BLOCK ##

  ## START BLOCK ##
  k8s:
    depends_on:
      - base
    image: lifeci/onbuild:k8s${CIRCLE_BUILD_NUM}
    entrypoint: kubectl version --client=true
    build:
      args:
        - BasedOn=base
        - BuildNo=${CIRCLE_BUILD_NUM}
        - K8sCliV=v1.13.3
      context: ./k8s #./azp/ansible/docker
      dockerfile: Dockerfile #Dockerfile
    environment:
      - Key=Val
    ## END BLOCK ##

  ## START BLOCK ##
  runner:
    depends_on:
      - base
    image: lifeci/onbuild:runner${CIRCLE_BUILD_NUM}
    #entrypoint: kubectl version --client=true
    build:
      args:
        - BasedOn=base
        - BuildNo=${CIRCLE_BUILD_NUM}
        - RunnerVersion=2.273.0
      context: ./runner #./azp/ansible/docker
      dockerfile: Dockerfile #Dockerfile
    environment:
      - GH_URL=${GH_URL}
      - GH_TOKEN=${GH_TOKEN}
  ## END BLOCK ##

  ## START BLOCK ##
  azpk8s:
    depends_on:
      - azp
    image: lifeci/onbuild:azpk8s${CIRCLE_BUILD_NUM}
    entrypoint: kubectl version --client=true
    build:
      args:
        - BasedOn=azp
        - BuildNo=${CIRCLE_BUILD_NUM}
        - K8sCliV=v1.13.3
      context: ./ #./azp/ansible/docker
      dockerfile: ./azp/k8s/Dockerfile #Dockerfile
    environment:
      - Key=Val
  ## END BLOCK ##

  ## START BLOCK ##
  azpawsk8s:
    depends_on:
      - azpaws
    image: lifeci/onbuild:azpaws${CIRCLE_BUILD_NUM}
    entrypoint: kubectl version --client=true
    build:
      args:
        - BasedOn=azpaws
        - BuildNo=${CIRCLE_BUILD_NUM}
        - K8sCliV=v1.13.3
      context: ./ #./azp/ansible/docker
      dockerfile: ./azp/aws/k8s/Dockerfile #Dockerfile
    environment:
      - Key=Val
  ## END BLOCK ##

  ## START BLOCK ##
  # docker-compose build node0; docker-compose scale node0=3
  node0:
    #image: centos:centos7.5.1804
    #entrypoint: yum -y install openssh-server; chkconfig sshd on; /usr/sbin/sshd -D
    #    command:
    build:
      args:
        - BuildNo=${CIRCLE_BUILD_NUM}
        #- AWScliV=1.11.156
      context: ./node0
      dockerfile: Dockerfile
    environment:
      - ROOT_PASS=p2
    ports:
      - 2201-2210:22
    volumes:
      - ${HOME}/.ssh/id_rsa-vtx.pub:/etc/ssh/id_rsa.pub:ro
## END BLOCK ##
